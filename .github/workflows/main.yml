name: test and release

on:
  pull_request:
    branches:
      - next
      - main
  workflow_dispatch:
    inputs:
      target_branch:
        description: 'The target branch to release to'
        required: true
        default: 'main'
      version:
        description: 'The version number to release'
        required: true

jobs:
  pytest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install poetry
      run: |
        python -m pip install poetry
    - name: Install dependencies with updated version
      run: poetry install
    - name: Run pytest
      run: poetry run pytest

  release:
    needs: pytest
    if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && github.event.inputs.target_branch == 'main'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: 'next'
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
    - name: Update version number
      run: poetry version ${{ github.event.inputs.version }}
    - name: Commit version changes
      run: |
        git config user.name "GitHub Actions"
        git config user.email "<>"
        git add pyproject.toml
        git commit -m "Bump version to ${{ github.event.inputs.version }}"
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: 'next'
    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        title: "Merge 'next' into 'main'"
        commit-message: "Merge 'next' into 'main'"
        branch: 'main'
        body: "This is an automated pull request merging 'next' into 'main'."
        delete-branch: false
        labels: 'automerge'
    - name: Install dependencies with updated version
      run: poetry install
    - name: Build and publish package
      run: |
        poetry build
        poetry config pypi-token.pypi ${{ secrets.POETRY_PYPI_TOKEN }}
        poetry publish
